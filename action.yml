name: "Prepare Release"
description: "Common setup for craft/prepare"
inputs:
  version:
    description: Version to release (optional)
    required: false
  calver:
    description: Use automatic CalVer versioning
    required: true
    default: false
  force:
    description: Force a release even when there are release-blockers (optional)
    required: false
  craft_version:
    description: The craft version to use, defaults to "latest" (optional)
    required: true
    default: latest

runs:
  using: "composite"
  steps:
    - id: killswitch
      name: Check release blockers
      shell: bash
      run: |
        if [[ -z '${{ inputs.force }}' ]] && gh issue list -l release-blocker -s open | grep -q '^[0-9]\+[[:space:]]'; then
          echo "Open release-blocking issues found, cancelling release...";
          gh api -X POST repos/:owner/:repo/actions/runs/$GITHUB_RUN_ID/cancel;
        fi
    - name: Determine version
      shell: bash
      run: |
        if [[ -n '${{ inputs.version }}' ]]; then
          echo 'RELEASE_VERSION=${{ inputs.version }}' >> $GITHUB_ENV;
        elif [[ '${{ inputs.calver }}' = 'true' ]]
          DATE_PART=$(date +'%y.%-m')
          declare -i PATCH_VERSION=0
          while gh api --silent "repos/:owner/:repo/git/ref/tags/$DATE_PART.$PATCH_VERSION" 2>/dev/null; do
            PATCH_VERSION+=1
          done
          echo "RELEASE_VERSION=${DATE_PART}.${PATCH_VERSION}" >> $GITHUB_ENV;
        else
          echo "You need to provide a version to release.";
          exit 1;
        fi
    - name: Set git user to getsentry-bot
      shell: bash
      run: |
        echo "GIT_COMMITTER_NAME=getsentry-bot" >> $GITHUB_ENV;
        echo "GIT_AUTHOR_NAME=getsentry-bot" >> $GITHUB_ENV;
        echo "EMAIL=bot@getsentry.com" >> $GITHUB_ENV;
    - name: Craft Prepare
      id: craft
      shell: bash
      run: npx @sentry/craft@${{ inputs.craft_version }} prepare --no-input "${{ env.RELEASE_VERSION }}"
      env:
        # TODO: Remove this when the latest version of craft is released
        GITHUB_API_TOKEN: ${{ github.token }}
    - name: Get Release Git Info
      id: release-git-info
      shell: bash
      run: |
        echo "::set-output name=branch::$(git rev-parse --symbolic-full-name @{-1})"
        echo "::set-output name=sha::$(git rev-parse @{-1})"
    - name: Request publish
      shell: bash
      run: |
        if [[ '${{ steps.craft.outcome }}' != 'success' ]]; then
          exit 1;
        fi
        title= "publish: $GITHUB_REPOSITORY@$RELEASE_VERSION"
        body="Requested by: @$GITHUB_ACTOR

        Quick links:
        - [View changes](https://github.com/GITHUB_REPOSITORY/compare/${{ steps.release-git-info.outputs.branch }})
        - [View check runs](https://github.com/GITHUB_REPOSITORY/commit/${{ steps.release-git-info.outputs.sha }}/checks/)

        Assign the **accepted** label to this issue to approve the release.
        "
        gh issue create -R "$GITHUB_REPOSITORY_OWNER/publish" --title "$title" --body "$body"
